package top.dayu.concurrent.temp;

/**
 * @Classname Mashibing
 * @Description TODO
 * @Date 2021/2/19 20:46
 * @Created by ldy
 */
public class Mashibing {


    /**

     案例： 避免超卖：10件商品11个人买到了  少买： 10件商品 11个人买 只有9人买到了

     如果是单机： 查库存 对库存/扣库存上锁 上个jvm锁就行

     分布式锁：
     mysql方案： mysql的唯一索引，扣库存先插入唯一索引，另外的线程再抢到这一件就会插入失败
     redis方案： setnx 加完锁如果服务挂了 导致不能释放锁 怎么办？ 加过期时间！
                并且 设置锁和设置过期时间要用一行代码，原子操作  避免中途出问题，导致过期时间没设置上

     面试注意： 不要一下把正确答案都答出来 应该给面试官留几个问题，
     让她追问 不要直接回答到追后的终极问题 不要让她没啥问的
     让面试官有发挥的余地  要给他惊喜

     redis锁注意： 删除key的时候 应该判断是不是我设置的 根据线程id或者唯一的id 不要删除人家的锁
     watch dog： 用看门狗来续期时间 //todo

     用redis主从 如果没有及时同步key 就会导致加上了同一把锁
     5个redis的独立节点，来一个加锁的时候，如果3个redis都setnx成功，那么就返回加锁成功，否则失败
     此时如果又来一个线程，只还能加锁成功2个，那么就加锁失败，这样就保证了正确。
     延期启动：如果此时挂了一台redis 不能立即重启！！！



     主从  一主2从3哨兵



     QPs：mysql每秒查询量 16核能达到10w
     面试官会问你的qps 是多少？ 应该说什么业务 几核 几g 下的多少 qps 怎么优化的  .....

     优化的两个方向： 把io磁盘读写换成内存   把内存计算换到cpu计算
     把堆中的操作换到栈中



     //todo 三级等保：https://www.zhihu.com/question/398105835
     身份证等信息的脱敏
     正经的项目：法律规定，日志最低存180天





    */

}
